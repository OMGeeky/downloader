refresh_rate: 30 seconds

appenders:
  stdout:
    kind: console
    filters:
      - kind: threshold
        level: info
    encoder:
      pattern: "[{d(%Y-%m-%d %H:%M:%S)}] [{h({l:5})}] {M} - {m}{n}"

  trace_file:
    kind: rolling_file
    path: "/downloader/logs/downloader.trace.log"
    filters:
      - kind: threshold
        level: trace
    encoder:
      pattern: "[{d:35}] [{h({l:5})}] {M}::{file}:{L} - {m}{n}"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 1 gb
      roller:
        kind: fixed_window
        pattern: "/downloader/logs/archive/downloader.trace.{}.log"
        count: 5

  info_file:
    kind: rolling_file
    path: "/downloader/logs/downloader.info.log"
    filters:
      - kind: threshold
        level: info
    encoder:
      pattern: "[{d(%Y-%m-%d %H:%M:%S)}] [{h({l:5})}] {M} - {m}{n}"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 100mb
      roller:
        kind: fixed_window
        pattern: "/downloader/logs/archive/downloader.info.{}.log"
        count: 5

  debug_file:
    kind: rolling_file
    path: "/downloader/logs/downloader.debug.log"
    filters:
      - kind: threshold
        level: debug
    encoder:
      pattern: "[{d:35}] [{h({l:5})}] {M}::{file}:{L} - {m}{n}"
    policy:
      kind: compound
      trigger:
        kind: size
        limit: 1gb
      roller:
        kind: fixed_window
        pattern: "/downloader/logs/archive/downloader.debug.{}.log"
        count: 5

root:
  level: trace
  appenders:
    - stdout
    - debug_file
    - trace_file
    - info_file